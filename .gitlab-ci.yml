stages:
  - docker
  - build
  - deploy

variables:
  WIC_ZIP_PATH: '${CI_PROJECT_DIR}/wic'
  EOS_PATH: '/eos/project/c/caribou/www/'
  
build:
  stage: build
  tags:
    - caribou-ci-vm
  image: 
    name: ${CI_REGISTRY_IMAGE}:latest
  variables:
    GIT_STRATEGY: none
    IMAGE_PATH: '/builds/poky/build/wic/'
  artifacts:
    paths:
      - ${WIC_ZIP_PATH}
    expire_in: 1 hour
  script:
    - bash -i /usr/local/bin/build-caribou-image.sh
  after_script:
    - mkdir ${WIC_ZIP_PATH}
    - zip -j ${WIC_ZIP_PATH}/sdimage-${CI_COMMIT_SHA:0:8}-mmcblk.zip ${IMAGE_PATH}/sdimage-${CI_COMMIT_SHA:0:8}-mmcblk.direct

deploy:
  stage: deploy
  tags:
    - caribou-ci-vm
  image:
    name : ${CI_REGISTRY_IMAGE}:latest
  dependencies:
    - build
  script:
    - export EOS_MGM_URL=root://eosuser.cern.ch
    - echo $EOS_PASSWORD | kinit $EOS_USER
    - eos cp ${WIC_ZIP_PATH}/sdimage-${CI_COMMIT_SHA:0:8}-mmcblk.zip ${EOS_PATH}

deploy_master:
  stage: deploy
  tags:
    - caribou-ci-vm
  only:
    - master
  image:
    name : ${CI_REGISTRY_IMAGE}:latest
  script:
    - export EOS_MGM_URL=root://eosuser.cern.ch
    - echo $EOS_PASSWORD | kinit $EOS_USER
    - eos rm ${EOS_PATH}/sdimage-latest-mmcblk.zip
    - eos file symlink ${EOS_PATH}/sdimage-latest-mmcblk.zip ${EOS_PATH}/sdimage-${CI_COMMIT_SHA:0:8}-mmcblk.zip

docker:
  stage: docker
  only:
    - schedules
    - web
  image: gitlab-registry.cern.ch/vcs/gitlabci-docker-builder:latest
  tags:
    - docker-image-build
  script: 
    - ""
  variables:
    TO: ${CI_REGISTRY_IMAGE}:latest
    DOCKER_FILE: misc/docker/Dockerfile
    CONTEXT_DIR: misc/docker/
    GIT_SUBMODULE_STRATEGY: recursive
    